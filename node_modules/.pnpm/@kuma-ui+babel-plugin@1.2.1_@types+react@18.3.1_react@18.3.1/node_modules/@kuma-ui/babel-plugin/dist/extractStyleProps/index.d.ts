import { NodePath, types } from '@babel/core';
import { CSSProperty, PseudoProps } from '@kuma-ui/system';

type ExtractedStyleProps<T> = T extends NodePath<types.JSXOpeningElement> ? {
    filteredAttributes: types.JSXAttribute[];
    styledProps: {
        [key: string]: CSSProperty | number | (CSSProperty | number)[];
    };
    pseudoProps: PseudoProps;
} : {
    filteredProperties: types.ObjectProperty[];
    styledProps: {
        [key: string]: string | number | (string | number)[];
    };
    pseudoProps: PseudoProps;
};
/**
 * Extracts style props from a JSX opening element or an ObjectExpression in a React.createElement call
 * and returns the filtered properties and the extracted style props.
 */
declare function extractStyleProps<T extends NodePath<types.JSXOpeningElement> | NodePath<types.ObjectExpression>>(path: T): ExtractedStyleProps<T>;

export { ExtractedStyleProps, extractStyleProps };
