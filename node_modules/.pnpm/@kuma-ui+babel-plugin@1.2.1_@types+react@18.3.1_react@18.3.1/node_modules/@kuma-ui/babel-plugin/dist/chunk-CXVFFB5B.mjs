// src/replaceKwithBox.ts
var replaceKwithBox = (node, t, importedStyleFunctions) => {
  node.traverse({
    JSXElement(path) {
      const { openingElement, closingElement } = path.node;
      if (t.isJSXMemberExpression(openingElement.name) && t.isJSXIdentifier(openingElement.name.object, {
        name: importedStyleFunctions["k"]
      })) {
        if (closingElement && t.isJSXMemberExpression(closingElement.name) && t.isJSXIdentifier(closingElement.name.object, {
          name: importedStyleFunctions["k"]
        })) {
          closingElement.name = t.jsxIdentifier(importedStyleFunctions["Box"]);
        }
        openingElement.attributes = [
          t.jsxAttribute(
            t.jsxIdentifier("as"),
            t.stringLiteral(openingElement.name.property.name)
          ),
          t.jsxAttribute(
            t.jsxIdentifier("IS_KUMA_DEFAULT"),
            t.jsxExpressionContainer(t.booleanLiteral(true))
          ),
          ...openingElement.attributes
        ];
        openingElement.name = t.jsxIdentifier(importedStyleFunctions["Box"]);
      }
    }
  });
};

export {
  replaceKwithBox
};
