import "../chunk-AUYFONHZ.mjs";
import {
  handleButton
} from "../chunk-7GXBZTQR.mjs";
import {
  handleFlex
} from "../chunk-WQ76HGI4.mjs";
import {
  handleHeading
} from "../chunk-N5PZKWBC.mjs";
import {
  handleSpacer
} from "../chunk-COB4XFKP.mjs";
import {
  handleText
} from "../chunk-THPWD5OJ.mjs";
import {
  handleBox
} from "../chunk-Q7KPNEH5.mjs";

// src/components/processComponents.ts
import { types as t } from "@babel/core";
import { componentList } from "@kuma-ui/core/components/componentList";
var processComponents = (nodePath, importedStyleFunctions) => {
  nodePath.traverse({
    JSXElement(path) {
      const openingElement = path.node.openingElement;
      if (t.isJSXIdentifier(openingElement.name)) {
        const name = openingElement.name.name;
        const componentType = componentList[importedStyleFunctions[name]];
        if (componentType) {
          switch (componentType) {
            case "Box":
              return handleBox(path);
            case "Flex":
              return handleFlex(path);
            case "Spacer":
              return handleSpacer(path);
            case "Text":
              return handleText(path);
            case "Button":
              return handleButton(path);
            case "Heading":
              return handleHeading(path);
          }
        }
      }
    }
  });
};
export {
  processComponents
};
