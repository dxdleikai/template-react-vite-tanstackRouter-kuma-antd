import { NodePath, types, template } from '@babel/core';

/**
 * Processes a TaggedTemplateExpression and creates a new React component based on the styled function.
 * This function should be called before processing CallExpressions to ensure that the styles
 * defined within the tagged template literal are overridden by style props.
 *
 * @param {NodePath<types.Program>} nodePath - The NodePath object representing the Program node.
 * @param {typeof types} t - The Babel types object.
 * @param {typeof Template} template - The Babel template object.
 * @param {Record<string, string>} importedStyleFunctions - An object containing the imported styled functions.
 */
declare const processTaggedTemplateExpression: (nodePath: NodePath<types.Program>, template: typeof template, importedStyleFunctions: Record<string, string>) => void;

export { processTaggedTemplateExpression };
