"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/collectImportedStyled.ts
var collectImportedStyled_exports = {};
__export(collectImportedStyled_exports, {
  collectImportedStyled: () => collectImportedStyled
});
module.exports = __toCommonJS(collectImportedStyled_exports);
function collectImportedStyled(path, t) {
  const importedStyleFunctions = {};
  const importDeclarations = path.get("body").filter((node) => t.isImportDeclaration(node.node));
  for (const importDeclaration of importDeclarations) {
    if (t.isImportDeclaration(importDeclaration.node) && importDeclaration.node.source.value === "@kuma-ui/core") {
      for (const specifier of importDeclaration.node.specifiers) {
        if (t.isImportSpecifier(specifier) && t.isIdentifier(specifier.imported)) {
          importedStyleFunctions[specifier.imported.name] = specifier.local.name;
        }
      }
    }
  }
  return importedStyleFunctions;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  collectImportedStyled
});
