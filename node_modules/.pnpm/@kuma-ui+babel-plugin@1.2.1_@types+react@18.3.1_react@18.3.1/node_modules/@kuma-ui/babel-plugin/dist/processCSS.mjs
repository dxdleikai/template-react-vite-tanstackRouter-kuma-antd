import {
  extractStylePropsFromObjectExpression
} from "./chunk-H6JCHQQL.mjs";

// src/processCSS.ts
import { sheet } from "@kuma-ui/sheet";
import { all, normalizePseudo } from "@kuma-ui/system";
function processCSS(nodePath, t, template, importedStyleFunctions) {
  nodePath.traverse({
    CallExpression(path) {
      const { node } = path;
      const isCSS = t.isIdentifier(node.callee) && node.callee.name === importedStyleFunctions["css"];
      if (!isCSS)
        return;
      if (!(node.arguments.length === 1 && t.isObjectExpression(node.arguments[0]))) {
        path.replaceWith(t.stringLiteral(""));
        return;
      }
      const styleObject = extractStylePropsFromObjectExpression(
        path,
        node.arguments[0]
      );
      const convertedPseudoProps = Object.entries(
        styleObject.pseudoProps
      ).map(([pseudoKey, pseudoValue]) => {
        const pseudoStyle = all(pseudoValue);
        return {
          key: normalizePseudo(pseudoKey),
          base: pseudoStyle.base,
          responsive: pseudoStyle.media
        };
      });
      const style = {
        base: all(styleObject.styledProps).base,
        responsive: all(styleObject.styledProps).media,
        pseudo: convertedPseudoProps
      };
      const className = sheet.addRule(style);
      path.replaceWith(t.stringLiteral(className));
      return;
    }
  });
}
export {
  processCSS
};
