"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var object_exports = {};
__export(object_exports, {
  flattenObject: () => flattenObject
});
module.exports = __toCommonJS(object_exports);
function flattenObject(object) {
  const result = {};
  for (const key in object) {
    if (!Object.hasOwn(object, key))
      continue;
    const value = object[key];
    if (typeof value == "object" && value !== null) {
      const _object = flattenObject(value);
      for (const _key in _object) {
        if (!Object.hasOwn(_object, _key))
          continue;
        result[key + "." + _key] = _object[_key];
      }
    } else {
      result[key] = value;
    }
  }
  return result;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  flattenObject
});
