"use client";

// src/components/Box/react/DynamicBox.tsx
import React from "react";
import { isBrowser } from "../../../utils/isBrowser.mjs";
import {
  useStyleRegistry,
  createStyleRegistry
} from "../../../registry/StyleRegistry.mjs";
import { extractDynamicProps, getCachedStyle } from "./utils.mjs";
import { theme } from "@kuma-ui/sheet";
import { forwardRef } from "../../forwardRef.mjs";
var defaultRegistry = createStyleRegistry();
var useInsertionEffect = React.useInsertionEffect || React.useLayoutEffect;
var DynamicBox = forwardRef(
  ({ as: Component = "div", children, variant, IS_KUMA_DEFAULT, ...props }, ref) => {
    const registry = useStyleRegistry() || defaultRegistry;
    const variantStyle = (() => {
      if (!variant)
        return {};
      if (!!IS_KUMA_DEFAULT)
        return {};
      return theme.getVariants("Box")?.variants?.[variant];
    })();
    const { dynamicProps, restProps } = extractDynamicProps({
      ...variantStyle,
      ...props
    });
    const { className, css } = getCachedStyle(dynamicProps);
    const box = React.createElement(
      Component,
      {
        ref,
        ...restProps,
        className: [restProps.className, className].filter(Boolean).join(" ")
      },
      children
    );
    if (!isBrowser) {
      registry.add(className, css);
      return box;
    }
    useInsertionEffect(() => {
      registry.add(className, css);
      return () => {
        registry.remove(className);
      };
    }, [className, css]);
    return box;
  }
);
export {
  DynamicBox
};
