"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var utils_exports = {};
__export(utils_exports, {
  extractDynamicProps: () => extractDynamicProps,
  getCachedStyle: () => getCachedStyle,
  hasDynamicProps: () => hasDynamicProps
});
module.exports = __toCommonJS(utils_exports);
var import_system = require("@kuma-ui/system");
var import_stableStringify = require("../../../utils/stableStringify");
function isDynamicProp(key) {
  if ((0, import_system.isStyledProp)(key) || (0, import_system.isPseudoProps)(key) || key === "variant") {
    return true;
  }
  return false;
}
function hasDynamicProps(props) {
  return Object.keys(props).some((key) => {
    if (isDynamicProp(key) && props[key] != null) {
      return true;
    }
    return false;
  });
}
function extractDynamicProps(props) {
  const dynamicProps = {};
  const restProps = {};
  Object.entries(props).forEach(([key, prop]) => {
    if (isDynamicProp(key)) {
      dynamicProps[key] = prop;
      return;
    }
    restProps[key] = prop;
  });
  return {
    dynamicProps,
    restProps
  };
}
const styleCache = {};
function getCachedStyle(dynamicProps) {
  const key = (0, import_stableStringify.stableStringify)(dynamicProps);
  let generatedStyle = styleCache[key];
  if (!generatedStyle) {
    generatedStyle = new import_system.StyleGenerator(dynamicProps, true).getStyle();
    styleCache[key] = generatedStyle;
  }
  return generatedStyle;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  extractDynamicProps,
  getCachedStyle,
  hasDynamicProps
});
