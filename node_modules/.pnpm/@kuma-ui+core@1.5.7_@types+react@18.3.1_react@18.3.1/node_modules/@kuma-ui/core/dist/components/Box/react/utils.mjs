// src/components/Box/react/utils.ts
import { isStyledProp, isPseudoProps, StyleGenerator } from "@kuma-ui/system";
import { stableStringify } from "../../../utils/stableStringify.mjs";
function isDynamicProp(key) {
  if (isStyledProp(key) || isPseudoProps(key) || key === "variant") {
    return true;
  }
  return false;
}
function hasDynamicProps(props) {
  return Object.keys(props).some((key) => {
    if (isDynamicProp(key) && props[key] != null) {
      return true;
    }
    return false;
  });
}
function extractDynamicProps(props) {
  const dynamicProps = {};
  const restProps = {};
  Object.entries(props).forEach(([key, prop]) => {
    if (isDynamicProp(key)) {
      dynamicProps[key] = prop;
      return;
    }
    restProps[key] = prop;
  });
  return {
    dynamicProps,
    restProps
  };
}
var styleCache = {};
function getCachedStyle(dynamicProps) {
  const key = stableStringify(dynamicProps);
  let generatedStyle = styleCache[key];
  if (!generatedStyle) {
    generatedStyle = new StyleGenerator(dynamicProps, true).getStyle();
    styleCache[key] = generatedStyle;
  }
  return generatedStyle;
}
export {
  extractDynamicProps,
  getCachedStyle,
  hasDynamicProps
};
