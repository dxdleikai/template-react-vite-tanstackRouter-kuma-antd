"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var componentList_exports = {};
__export(componentList_exports, {
  componentDefaultProps: () => componentDefaultProps,
  componentHandler: () => componentHandler,
  componentList: () => componentList,
  defaultComponentTag: () => defaultComponentTag,
  isComponentProps: () => isComponentProps
});
module.exports = __toCommonJS(componentList_exports);
var import_handler = require("./Box/handler");
var import_handler2 = require("./Button/handler");
var import_handler3 = require("./Flex/handler");
var import_handler4 = require("./Heading/handler");
var import_handler5 = require("./Spacer/handler");
var import_handler6 = require("./Text/handler");
var import_handler7 = require("./Select/handler");
var import_handler8 = require("./Input/handler");
var import_handler9 = require("./HStack/handler");
var import_handler10 = require("./VStack/handler");
var import_handler11 = require("./Image/handler");
var import_handler12 = require("./Link/handler");
var import_handler13 = require("./Grid/handler");
var import_react = require("react");
const componentList = Object.freeze({
  Box: "Box",
  Flex: "Flex",
  Spacer: "Spacer",
  Text: "Text",
  Button: "Button",
  Heading: "Heading",
  Select: "Select",
  Input: "Input",
  HStack: "HStack",
  VStack: "VStack",
  Image: "Image",
  Link: "Link",
  Grid: "Grid"
});
const defaultComponentTag = {
  Box: import_handler.defaultBoxTag,
  Button: import_handler2.defaultButtonTag,
  Flex: import_handler3.defaultFlexTag,
  Heading: import_handler4.defaultHeadingTag,
  Spacer: import_handler5.defaultSpacerTag,
  Text: import_handler6.defaultTextTag,
  Select: import_handler7.defaultSelectTag,
  Input: import_handler8.defaultInputTag,
  HStack: import_handler9.defaultHStackTag,
  VStack: import_handler10.defaultVStackTag,
  Image: import_handler11.defaultImageTag,
  Link: import_handler12.defaultLinkTag,
  Grid: import_handler13.defaultGridTag
};
const isComponentProps = (componentName) => (propName) => {
  switch (componentName) {
    case "Box":
      return (0, import_handler.isBoxProps)(propName);
    case "Button":
      return (0, import_handler2.isButtonProps)(propName);
    case "Flex":
      return (0, import_handler3.isFlexProps)(propName);
    case "Heading":
      return (0, import_handler4.isHeadingProps)(propName);
    case "Spacer":
      return (0, import_handler5.isSpacerProps)(propName);
    case "Text":
      return (0, import_handler6.isTextProps)(propName);
    case "Select":
      return (0, import_handler7.isSelectProps)(propName);
    case "Input":
      return (0, import_handler8.isInputProps)(propName);
    case "HStack":
      return (0, import_handler9.isHStackProps)(propName);
    case "VStack":
      return (0, import_handler10.isVStackProps)(propName);
    case "Image":
      return (0, import_handler11.isImageProps)(propName);
    case "Link":
      return (0, import_handler12.isLinkProps)(propName);
    case "Grid":
      return (0, import_handler13.isGridProps)(propName);
    default:
      return componentName;
  }
};
const componentDefaultProps = (componentName) => {
  switch (componentName) {
    case "Box":
      return import_handler.boxDefaultProps;
    case "Button":
      return import_handler2.buttonDefaultProps;
    case "Flex":
      return import_handler3.flexDefaultProps;
    case "Heading":
      return import_handler4.headingDefaultProps;
    case "Spacer":
      return import_handler5.spacerDefaultProps;
    case "Text":
      return import_handler6.textDefaultProps;
    case "Select":
      return import_handler7.selectDefaultProps;
    case "Input":
      return import_handler8.inputDefaultProps;
    case "HStack":
      return import_handler9.hstackDefaultProps;
    case "VStack":
      return import_handler10.vstackDefaultProps;
    case "Image":
      return import_handler11.imageDefaultProps;
    case "Link":
      return import_handler12.linkDefaultProps;
    case "Grid":
      return import_handler13.gridDefaultProps;
    default:
      return componentName;
  }
};
const componentHandler = (componentName) => (
  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- FIXME
  (props) => {
    switch (componentName) {
      case "Box":
        return (0, import_handler.boxHandler)(props);
      case "Button":
        return (0, import_handler2.buttonHandler)(props);
      case "Flex":
        return (0, import_handler3.flexHandler)(props);
      case "Heading":
        return (0, import_handler4.headingHandler)(props);
      case "Spacer":
        return (0, import_handler5.spacerHandler)(props);
      case "Text":
        return (0, import_handler6.textHandler)(props);
      case "Select":
        return (0, import_handler7.selectHandler)(props);
      case "Input":
        return (0, import_handler8.inputHandler)(props);
      case "HStack":
        return (0, import_handler9.hstackHandler)(props);
      case "VStack":
        return (0, import_handler10.vstackHandler)(props);
      case "Image":
        return (0, import_handler11.imageHandler)(props);
      case "Link":
        return (0, import_handler12.linkHandler)(props);
      case "Grid":
        return (0, import_handler13.gridHandler)(props);
      default:
        return componentName;
    }
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  componentDefaultProps,
  componentHandler,
  componentList,
  defaultComponentTag,
  isComponentProps
});
