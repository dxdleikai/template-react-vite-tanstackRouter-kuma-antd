import { a as ThemeSystem } from './theme-bbd95c64.js';
import { StyledComponentProps } from './styled.js';
import { StyledKeyType, StyledProps, PseudoProps } from '@kuma-ui/system';
import './utils/object.js';
import './utils/types.js';
import './components/componentList.js';
import '@kuma-ui/sheet';
import 'react';

type StyledComponent<T extends keyof JSX.IntrinsicElements> = React.FC<Omit<StyledComponentProps<T>, StyledKeyType> & StyledProps<ThemeSystem> & Partial<PseudoProps<ThemeSystem>>>;
/**
 * The `k` API allows you to use utility style props directly on a React component. These elements accept utility props for inline styling that are type-safe and intuitively named. This means you can apply styles directly on the components while maintaining code readability and ease of use.
 */
declare const k: {
    [K in keyof JSX.IntrinsicElements]: StyledComponent<K>;
};

export { k };
