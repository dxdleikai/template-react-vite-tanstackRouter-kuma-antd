import { ErrorWrapper } from "../../components";
import { Tabs, theme } from "../..";
import Code from 'dumi/theme-default/builtins/SourceCode';
import isString from 'lodash/isString';
import kebabCase from 'lodash/kebabCase';
import lowerFirst from 'lodash/lowerFirst';
import React from 'react';
var beautify = require('js-beautify/js').js;
var useToken = theme.useToken;
/**
 * 获取color配置
 */
export default function () {
  var _useToken = useToken(),
    token = _useToken.token;
  console.log(34343434, token);
  // 获取颜色色值
  var colors = function () {
    var obj = {
      value: {},
      varValue: {}
    };
    Object.keys(token).forEach(function (item) {
      // @ts-ignore
      var currentValue = (token === null || token === void 0 ? void 0 : token[item]) || '';
      if (isString(currentValue) && (currentValue[0] === '#' || currentValue.indexOf('rgb') === 0 || currentValue === 'transparent' || currentValue === 'currentColor')) {
        // 颜色色值
        obj.value[item] = currentValue;
        obj.varValue[item] = "var(--ant-".concat(kebabCase(item), ", ").concat(currentValue, ")");
      }
    });
    return obj;
  }();
  var shadow = function () {
    var obj = {
      value: {},
      varValue: {}
    };
    Object.keys(token).forEach(function (item) {
      var currentItem = function () {
        var name = lowerFirst(item.replace('shadow', '').replace('boxShadow', ''));
        if (name.indexOf('-') === 0) {
          return name.replace('-', '');
        }
        return name;
      }();
      // @ts-ignore
      var currentValue = (token === null || token === void 0 ? void 0 : token[item]) || '';
      if (isString(currentValue) && item.includes('shadow') || item.includes('boxShadow')) {
        // 颜色色值
        obj.value[currentItem || 'default'] = currentValue;
        obj.varValue[currentItem || 'default'] = "var(--ant-".concat(kebabCase(item), ", ").concat(currentValue, ")");
      }
    });
    return obj;
  }();
  var rounded = function () {
    var obj = {
      value: {},
      varValue: {}
    };
    Object.keys(token).forEach(function (item) {
      var currentItem = function () {
        var name = item.replace('borderRadius', '').toLowerCase();
        if (name.indexOf('-') === 0) {
          return name.replace('-', '');
        }
        return name;
      }();
      // @ts-ignore
      var currentValue = (token === null || token === void 0 ? void 0 : token[item]) || '';
      if (item.includes('borderRadius')) {
        // 颜色色值
        obj.value[currentItem || 'default'] = currentValue;
        obj.varValue[currentItem || 'default'] = "var(--ant-".concat(kebabCase(item), ", ").concat(currentValue, "px)");
      }
    });
    return obj;
  }();
  return /*#__PURE__*/React.createElement(ErrorWrapper, null, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Tabs, {
    defaultActiveKey: "2",
    items: [{
      key: '1',
      label: '输出tailwind值',
      children: /*#__PURE__*/React.createElement(Code, {
        lang: "json"
      }, beautify(JSON.stringify({
        colors: colors.value,
        shadow: shadow.value,
        rounded: rounded.value
      }), {
        indent_size: 2
      }))
    }, {
      key: '2',
      label: '输出tailwind值-css变量',
      children: /*#__PURE__*/React.createElement(Code, {
        lang: "json"
      }, beautify(JSON.stringify({
        colors: colors.varValue,
        shadow: shadow.varValue,
        rounded: rounded.varValue
      }), {
        indent_size: 2
      }))
    }]
  })));
}