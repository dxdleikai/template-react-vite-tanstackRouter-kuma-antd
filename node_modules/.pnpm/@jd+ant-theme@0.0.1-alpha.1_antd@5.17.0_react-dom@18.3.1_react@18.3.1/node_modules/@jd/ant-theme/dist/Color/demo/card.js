function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import { ErrorWrapper } from "../../components";
import { getProps } from "../../utils/PropsType";
import { Tooltip } from "../..";
import camelCase from 'lodash/camelCase';
import kebabCase from 'lodash/kebabCase';
import React from 'react';

/**
 * 提示
 */
export var Pop = function Pop(props) {
  var name = props.name;
  var tailwindName = camelCase(name === null || name === void 0 ? void 0 : name.replace('color', ''));
  if (!name || true) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, props.children);
  }
  return /*#__PURE__*/React.createElement(Tooltip, {
    title: /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
      className: "flex flex-col gap-6 px-6"
    }, /*#__PURE__*/React.createElement("div", {
      className: "flex flex-col gap-3"
    }, /*#__PURE__*/React.createElement("span", {
      className: "-ml-6 font-bold"
    }, "token"), /*#__PURE__*/React.createElement("div", {
      className: "opacity-80"
    }, name)), /*#__PURE__*/React.createElement("div", {
      className: "flex flex-col gap-3"
    }, /*#__PURE__*/React.createElement("span", {
      className: "-ml-6 font-bold"
    }, "css\u53D8\u91CF"), /*#__PURE__*/React.createElement("div", {
      className: "opacity-80"
    }, "--ant-".concat(kebabCase(name)))), /*#__PURE__*/React.createElement("div", {
      className: "flex flex-col gap-3"
    }, /*#__PURE__*/React.createElement("span", {
      className: "-ml-6 font-bold"
    }, "tailwind"), /*#__PURE__*/React.createElement("div", {
      className: "opacity-80"
    }, "text-", tailwindName), /*#__PURE__*/React.createElement("div", {
      className: "opacity-80"
    }, "bg-", tailwindName), /*#__PURE__*/React.createElement("div", {
      className: "opacity-80"
    }, "border-", tailwindName))))
  }, props.children);
};
/**
 * 颜色示例卡片
 */
var Card = function Card(props) {
  var title = props.title,
    description = props.description,
    leftTitle = props.leftTitle,
    rightTitle = props.rightTitle,
    color = props.color;
  var wrapperProps = getProps(props, {
    className: 'max-w-full'
  }, ['title', 'description', 'leftTitle', 'rightTitle', 'color']);
  return /*#__PURE__*/React.createElement(ErrorWrapper, null, /*#__PURE__*/React.createElement(Pop, props, /*#__PURE__*/React.createElement("div", _extends({
    className: "max-w-full"
  }, wrapperProps), /*#__PURE__*/React.createElement("div", {
    className: "rounded-8 shadow-low flex overflow-hidden",
    style: {
      width: '680px',
      maxWidth: '100%'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      width: '200px',
      background: color
    }
  }), /*#__PURE__*/React.createElement("div", {
    className: "flex-1 p-12"
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex items-center justify-between text-12"
  }, /*#__PURE__*/React.createElement("span", null, leftTitle), /*#__PURE__*/React.createElement("span", {
    className: "text-sub"
  }, rightTitle)), /*#__PURE__*/React.createElement("div", {
    className: "mt-10 text-18 font-bold"
  }, title), /*#__PURE__*/React.createElement("div", {
    className: "mt-5 text-sub text-12"
  }, description))), props.children)));
};
Card.defaultProps = {};
export default Card;