function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import { ErrorWrapper } from "../../components";
import { theme } from "../..";
import React from 'react';
import Card from "./card";
var useToken = theme.useToken;

/**
 * 常用
 */
export default function () {
  var _useToken = useToken(),
    token = _useToken.token;
  return null;
  return /*#__PURE__*/React.createElement(ErrorWrapper, null, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "mb-12 text-12 text-sub mt-20"
  }, "\u54C1\u724C\u8272"), /*#__PURE__*/React.createElement("div", {
    className: "flex flex-wrap gap-x-30 gap-y-12"
  }, /*#__PURE__*/React.createElement(Card, {
    color: token['colorPrimary'],
    title: "\u54C1\u724C\u4E3B\u8272",
    description: "\u54C1\u724C\u4E3B\u8272\uFF0C\u591A\u7528\u4E8E\u4E3B\u8981\u529F\u80FD\u6309\u94AE\u3001\u5F3A\u8C03\u3001\u5229\u76CA\u70B9\u4EE5\u53CA\u5E73\u53F0\u8C03\u6027\u7684\u51F8\u663E\u3002",
    leftTitle: "sys/Color/Primary",
    name: "colorPrimary",
    rightTitle: "Colors.Red.600 | ".concat(token['colorPrimary'])
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex items-center gap-6 mt-12"
  }, new Array(10).fill(null).map(function (item, index) {
    return /*#__PURE__*/React.createElement("span", {
      className: "h-30 rounded-8 flex-1 relative",
      key: index
      // @ts-ignore
      ,
      style: {
        background: token === null || token === void 0 ? void 0 : token["red".concat(index + 1)]
      }
    }, index === 5 ? /*#__PURE__*/React.createElement("i", {
      className: "absolute w-8 h-8 bg-red6 top-0  -mt-4 left-[50%] -ml-4",
      style: {
        transform: 'rotate(45deg)'
      }
    }) : null);
  })))), /*#__PURE__*/React.createElement("div", {
    className: "mb-12 text-12 text-sub mt-40"
  }, "\u6587\u672C\u8272"), /*#__PURE__*/React.createElement("div", {
    className: "flex flex-wrap gap-x-30 gap-y-12"
  }, [{
    title: '主要文本色',
    leftTitle: 'sys/Text/Primary',
    // @ts-ignore
    rightTitle: "Colors.Neutral.1000 | ".concat(token['sys-text-primary']),
    description: '主要内容用色，用于常规标题内容、细文浏览、常规按钮文字及图表引导。',
    name: 'base',
    // @ts-ignore
    color: token['sys-text-primary']
  }, {
    title: '次要文本色',
    leftTitle: 'sys/Text/Secondary',
    // @ts-ignore
    rightTitle: "Colors.Neutral.700 | ".concat(token['sys-text-secondary']),
    name: 'colorSecondary',
    description: '次要文本色，用于不需要突出强调的文字内容，正文、西文、元素等。',
    // @ts-ignore
    color: token['sys-text-secondary']
  }, {
    title: '三级文本色',
    leftTitle: 'sys/Text/Tertiary',
    // @ts-ignore
    rightTitle: "Colors.Neutral.500 | ".concat(token['sys-text-tertiary']),
    name: 'colorTertiary',
    description: '三级文本色，用于次级标题内容、属性标示、非主要信息引导等。',
    // @ts-ignore
    color: token['sys-text-tertiary']
  }, {
    title: '置灰文本色',
    leftTitle: 'sys/Text/Disable',
    // @ts-ignore
    rightTitle: "Colors.Neutral.300 | ".concat(token['sys-text-disable']),
    name: 'colorDisabled',
    description: '置灰文本色，用于置灰/无效内容、特殊不可点击按钮等',
    // @ts-ignore
    color: token['sys-text-disable']
  }, {
    title: '反白文本色',
    leftTitle: 'sys/Text/Anti',
    // @ts-ignore
    rightTitle: "#FFFFFF",
    description: '用于深色背景下的反白文本、元素',
    name: 'white',
    // @ts-ignore
    color: '#FFFFFF'
  }].map(function (item, index) {
    return /*#__PURE__*/React.createElement(Card, _extends({}, item, {
      key: index
    }));
  })), /*#__PURE__*/React.createElement("div", {
    className: "mb-12 text-12 text-sub mt-40"
  }, "\u7EC4\u4EF6\u7070\u9636"), /*#__PURE__*/React.createElement("div", {
    className: "flex gap-12 pb-12 flex-wrap"
  }, /*#__PURE__*/React.createElement("div", {
    className: ""
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex flex-wrap gap-x-30 gap-y-12"
  }, [{
    title: 'Line-边框色300',
    leftTitle: 'sys/Surface/Outline300',
    // @ts-ignore
    rightTitle: "Colors.Gray.300 | ".concat(token['sys-surface-outline-300']),
    description: '需要特殊强调的组件边框线；并列元素之间的分隔线',
    // @ts-ignore
    color: token['sys-surface-outline-300']
  }, {
    title: 'Line-边框色200',
    leftTitle: 'sys/Surface/Outline200',
    // @ts-ignore
    rightTitle: "".concat(token['sys-surface-outline-200']),
    description: '可操作组件的边框色(button、input、选框等)；需要强调的模块间分隔线',
    // @ts-ignore
    color: token['sys-surface-outline-200']
  }, {
    title: 'Line-边框色100',
    leftTitle: 'sys/Surface/Outline100',
    // @ts-ignore
    rightTitle: "Colors.Gray.100  | ".concat(token['sys-surface-outline-100']),
    description: '容器边框色；模块间分隔线颜色；需要弱化的组件边框色',
    // @ts-ignore
    color: token['sys-surface-outline-100']
  }, {
    title: 'Line-边框色6%',
    leftTitle: 'sys/Surface/Outline006',
    // @ts-ignore
    rightTitle: "".concat(token['sys-surface-outline-006']),
    description: '灰色背景下的加深分割线；需要用透明度表示的描边等',
    // @ts-ignore
    color: token['sys-surface-outline-006']
  }].map(function (item, index) {
    return /*#__PURE__*/React.createElement(Card, _extends({}, item, {
      key: index
    }));
  }))), /*#__PURE__*/React.createElement("div", {
    className: ""
  }, /*#__PURE__*/React.createElement("div", {
    className: "flex flex-wrap gap-x-30 gap-y-12"
  }, [{
    title: 'Fill-填充色300',
    leftTitle: 'sys/Surface/Outline300',
    // @ts-ignore
    rightTitle: "Colors.Gray.300 | ".concat(token['sys-surface-surface-300']),
    description: '需要强调的卡片背景色/组件hover色；点击拖动条背景色',
    // @ts-ignore
    color: token['sys-surface-surface-300']
  }, {
    title: 'Fill-填充色200',
    leftTitle: 'sys/Surface/Surface200',
    // @ts-ignore
    rightTitle: "Colors.colorBorder2 | ".concat(token['sys-surface-surface-200']),
    description: '需要强调的卡片容器背景色；文本按钮的点击态底色；默认拖动条背景色',
    // @ts-ignore
    color: token['sys-surface-surface-200']
  }, {
    title: 'Fill-填充色100',
    leftTitle: 'Colors.Gray.50',
    // @ts-ignore
    rightTitle: "Colors.Gray.50 | ".concat(token['sys-surface-surface-100']),
    description: '列表/下拉选项/文本按钮的hover色；表头背景色；卡片容器背景色；骨架屏元素色等',
    // @ts-ignore
    color: token['sys-surface-surface-100']
  }, {
    title: 'Fill-填充白色',
    leftTitle: 'sys/Surface/Surface-white',
    // @ts-ignore
    rightTitle: "".concat(token['sys-surface-surface-white']),
    description: '用于白色卡片的填充色',
    // @ts-ignore
    color: token['sys-surface-surface-white']
  }].map(function (item, index) {
    return /*#__PURE__*/React.createElement(Card, _extends({}, item, {
      key: index
    }));
  })))), /*#__PURE__*/React.createElement("div", {
    className: "mb-12 text-12 text-sub mt-40"
  }, "\u529F\u80FD\u8272"), /*#__PURE__*/React.createElement("div", {
    className: "flex flex-wrap gap-x-30 gap-y-12"
  }, [{
    title: '信息色',
    leftTitle: 'sys/State/info',
    // @ts-ignore
    rightTitle: "Colors.Skyblue.600 | ".concat(token['sys-state-info']),
    description: '主要用于温和的信息提示、进行中状态',
    name: 'colorInfo',
    // @ts-ignore
    color: token['sys-state-info']
  }, {
    title: '成功色',
    leftTitle: 'sys/State/success',
    // @ts-ignore
    rightTitle: "Colors.Green.600 | ".concat(token['sys-state-success']),
    description: '主要用于成功信息或图标、已完成状态',
    name: 'colorSuccess',
    // @ts-ignore
    color: token['sys-state-success']
  }, {
    title: '警示色',
    leftTitle: 'sys/State/warning',
    // @ts-ignore
    rightTitle: "Colors.Yellow.600 | ".concat(token['sys-state-warning']),
    description: '主要用于警示信息或图标、待处理状态',
    name: 'colorWarning',
    // @ts-ignore
    color: token['sys-state-warning']
  }, {
    title: '报错色',
    leftTitle: 'sys/State/error',
    // @ts-ignore
    rightTitle: "Colors.Red.600 | ".concat(token['sys-state-error']),
    description: '主要用于提示错误信息或图标、驳回状态',
    name: 'colorError',
    // @ts-ignore
    color: token['sys-state-error']
  }, {
    title: '链接色',
    leftTitle: 'sys/State/link',
    // @ts-ignore
    rightTitle: "Colors.Blue.600 | ".concat(token.blue6),
    description: '主要用于文字链接',
    name: 'colorLink',
    // @ts-ignore
    color: token.blue6
  }].map(function (item, index) {
    return /*#__PURE__*/React.createElement(Card, _extends({}, item, {
      key: index
    }));
  }))));
}