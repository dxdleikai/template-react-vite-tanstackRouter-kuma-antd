import {
  __publicField
} from "./chunk-NHABU752.mjs";

// src/styleMap.ts
var _StyleMap = class {
  map;
  constructor() {
    this.map = /* @__PURE__ */ new Map();
  }
  static getInstance() {
    if (!_StyleMap.instance) {
      _StyleMap.instance = new _StyleMap();
    }
    return _StyleMap.instance;
  }
  // Add the given CSS for the specified file to the map.
  // In the future, we might use an id to associate the HTML tag
  // with the corresponding CSS (by using the data-kuma-ui attribute)
  // and improve performance by removing duplicate CSS across different files.
  set(fileName, css) {
    this.map.set(fileName, css);
  }
  get(fileName) {
    return this.map.get(fileName);
  }
  delete(fileName) {
    this.map.delete(fileName);
  }
  reset() {
    this.map.clear();
  }
};
var StyleMap = _StyleMap;
__publicField(StyleMap, "instance");
var styleMap = StyleMap.getInstance();

export {
  styleMap
};
