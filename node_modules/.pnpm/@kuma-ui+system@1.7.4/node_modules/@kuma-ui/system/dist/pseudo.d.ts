import { StyledProps } from './consumeStyleProps.js';
import { ThemeSystemType, ExcludeHyphen, RemoveColon } from './types.js';
import { Pseudos } from 'csstype';
import './props/animation.js';
import './keys.js';
import './props/space.js';
import './props/typography.js';
import './props/layout.js';
import './props/color.js';
import './props/flex.js';
import './props/border.js';
import './props/outline.js';
import './props/position.js';
import './props/shadow.js';
import './props/grid.js';
import './props/list.js';
import './props/effect.js';
import './props/text.js';
import './props/font.js';
import './props/mask.js';
import './props/column.js';
import './props/background.js';
import './props/filter.js';
import '@kuma-ui/sheet';

type PseudoProps<T extends ThemeSystemType = ThemeSystemType> = {
    [key in `_${ExcludeHyphen<RemoveColon<Pseudos>>}`]?: StyledProps<T>;
};
declare const normalizePseudo: (props: string) => string;
declare const isPseudoProps: (props: unknown) => props is "_left" | "_right" | "_marker" | "_cue" | "_cue-region" | "_part" | "_slotted" | "_view-transition-group" | "_view-transition-image-pair" | "_view-transition-new" | "_view-transition-old" | "_dir" | "_has" | "_host" | "_host-context" | "_is" | "_lang" | "_matches()" | "_not" | "_nth-child" | "_nth-last-child" | "_nth-last-of-type" | "_nth-of-type" | "_where" | "_after" | "_backdrop" | "_before" | "_first-letter" | "_first-line" | "_grammar-error" | "_placeholder" | "_selection" | "_spelling-error" | "_target-text" | "_view-transition" | "_active" | "_any-link" | "_blank" | "_checked" | "_current" | "_default" | "_defined" | "_disabled" | "_empty" | "_enabled" | "_first" | "_first-child" | "_first-of-type" | "_focus" | "_focus-visible" | "_focus-within" | "_fullscreen" | "_future" | "_hover" | "_in-range" | "_indeterminate" | "_invalid" | "_last-child" | "_last-of-type" | "_link" | "_local-link" | "_nth-col" | "_nth-last-col" | "_only-child" | "_only-of-type" | "_optional" | "_out-of-range" | "_past" | "_paused" | "_picture-in-picture" | "_placeholder-shown" | "_playing" | "_read-only" | "_read-write" | "_required" | "_root" | "_scope" | "_target" | "_target-within" | "_user-invalid" | "_user-valid" | "_valid" | "_visited";

export { PseudoProps, isPseudoProps, normalizePseudo };
