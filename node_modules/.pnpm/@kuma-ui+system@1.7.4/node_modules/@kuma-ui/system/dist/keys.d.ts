declare const styleKeys: {
    animation: readonly ["animation", "animationComposition", "animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimeline", "animationTimingFunction"];
    space: readonly ["margin", "m", "marginTop", "mt", "marginBottom", "mb", "marginLeft", "ml", "marginRight", "mr", "marginX", "mx", "marginY", "my", "padding", "p", "paddingTop", "pt", "paddingBottom", "pb", "paddingLeft", "pl", "paddingRight", "pr", "paddingX", "px", "paddingY", "py"];
    typography: readonly ["hyphenateCharacter", "hyphenateLimitChars", "hyphens", "hangingPunctuation", "lineHeight", "lineBreak", "letterSpacing", "orphans", "quotes", "rubyPosition", "unicodeBidi", "widows", "whiteSpace", "wordBreak", "wordSpacing", "writingMode"];
    fontKeys: readonly ["font", "fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontOpticalSizing", "fontPalette", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontSynthesis", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantEmoji", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontVariationSettings", "fontWeight"];
    textKeys: readonly ["textAlign", "textAlignLast", "textCombineUpright", "textDecoration", "textDecorationColor", "textDecorationLine", "textDecorationSkipInk", "textDecorationStyle", "textDecorationThickness", "textEmphasis", "textEmphasisColor", "textEmphasisPosition", "textEmphasisStyle", "textIndent", "textJustify", "textOrientation", "textOverflow", "textRendering", "textShadow", "textTransform", "textUnderlineOffset", "textUnderlinePosition"];
    layout: readonly ["width", "w", "minWidth", "minW", "maxWidth", "maxW", "height", "h", "minHeight", "minH", "maxHeight", "maxH", "display", "overflow", "overflowX", "overflowY", "position", "zIndex", "cursor", "userSelect", "aspectRatio", "boxSizing", "float", "clear", "objectFit", "objectPosition", "resize", "verticalAlign"];
    flex: readonly ["flexDirection", "flexDir", "justifyContent", "justify", "alignItems", "alignContent", "alignSelf", "flex", "flexFlow", "flexWrap", "flexGrow", "flexShrink", "flexBasis", "justifyItems", "justifySelf", "placeItems", "placeContent", "gap"];
    color: readonly ["background", "bg", "backgroundColor", "bgColor", "color", "borderColor", "outlineColor", "accentColor", "caretColor", "opacity", "visibility"];
    border: readonly ["border", "borderWidth", "borderTopWidth", "borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderStyle", "borderTopStyle", "borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderRadius", "borderTopLeftRadius", "borderTopRightRadius", "borderBottomLeftRadius", "borderBottomRightRadius", "borderTop", "borderRight", "borderBottom", "borderLeft", "borderX", "borderY", "borderStart", "borderEnd", "borderStartWidth", "borderEndWidth", "borderStartStyle", "borderEndStyle", "borderStartRadius", "borderEndRadius"];
    outline: readonly ["outline", "outlineWidth", "outlineStyle", "outlineOffset"];
    position: readonly ["top", "right", "bottom", "left", "inset"];
    shadow: readonly ["textShadow", "boxShadow"];
    list: readonly ["listStyle", "listStyleImage", "listStylePosition", "listStyleType"];
    grid: readonly ["grid", "gridArea", "gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridColumn", "gridColumnEnd", "gridColumnStart", "gridRow", "gridRowEnd", "gridRowStart", "gridTemplate", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows", "gridGap", "gridColumnGap", "gridRowGap"];
    column: readonly ["columnCount", "columnFill", "columnGap", "columnRule", "columnRuleColor", "columnRuleStyle", "columnRuleWidth", "columnSpan", "columnWidth", "columns"];
    effect: readonly ["transition", "transitionDuration", "transitionProperty", "transitionTimingFunction", "transitionDelay", "transform", "transformBox", "transformOrigin", "transformStyle", "clipPath"];
    mask: readonly ["mask", "maskBorder", "maskBorderMode", "maskBorderOutset", "maskBorderRepeat", "maskBorderSlice", "maskBorderSource", "maskBorderWidth", "maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPosition", "maskRepeat", "maskSize", "maskType"];
    background: readonly ["backgroundImage", "bgImage", "backgroundPosition", "bgPosition", "backgroundPositionX", "bgPositionX", "backgroundPositionY", "bgPositionY", "backgroundSize", "bgSize", "backgroundRepeat", "bgRepeat", "backgroundAttachment", "bgAttachment", "backgroundClip", "bgClip", "backgroundOrigin", "bgOrigin", "backgroundBlendMode", "bgBlendMode"];
    filter: readonly ["filter", "backdropFilter"];
};
type AnimationKeys = (typeof styleKeys.animation)[number];
type SpaceKeys = (typeof styleKeys.space)[number];
type TypographyKeys = (typeof styleKeys.typography)[number];
type FontKeys = (typeof styleKeys.fontKeys)[number];
type TextKeys = (typeof styleKeys.textKeys)[number];
type LayoutKeys = (typeof styleKeys.layout)[number];
type ColorKeys = (typeof styleKeys.color)[number];
type FlexKeys = (typeof styleKeys.flex)[number];
type BorderKeys = (typeof styleKeys.border)[number];
type OutlineKeys = (typeof styleKeys.outline)[number];
type PositionKeys = (typeof styleKeys.position)[number];
type ShadowKeys = (typeof styleKeys.shadow)[number];
type ListKeys = (typeof styleKeys.list)[number];
type GridKeys = (typeof styleKeys.grid)[number];
type ColumnKeys = (typeof styleKeys.column)[number];
type EffectKeys = (typeof styleKeys.effect)[number];
type MaskKeys = (typeof styleKeys.mask)[number];
type BackgroundKeys = (typeof styleKeys.background)[number];
type FilterKeys = (typeof styleKeys.filter)[number];
type StyledKeyType = AnimationKeys | SpaceKeys | TypographyKeys | FontKeys | TextKeys | LayoutKeys | ColorKeys | FlexKeys | BorderKeys | OutlineKeys | PositionKeys | ShadowKeys | ListKeys | GridKeys | BackgroundKeys | MaskKeys | ColumnKeys | EffectKeys | FilterKeys;
declare const isStyledProp: (value: string) => boolean;

export { AnimationKeys, BackgroundKeys, BorderKeys, ColorKeys, ColumnKeys, EffectKeys, FilterKeys, FlexKeys, FontKeys, GridKeys, LayoutKeys, ListKeys, MaskKeys, OutlineKeys, PositionKeys, ShadowKeys, SpaceKeys, StyledKeyType, TextKeys, TypographyKeys, isStyledProp, styleKeys };
